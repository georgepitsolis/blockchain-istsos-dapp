<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">
    <title>
        <%= title %>
    </title>

    <link rel="stylesheet" href="assets/bootstrap/css/bootstrap.min.css">
	<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.9.0/moment.min.js"></script>
	<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.37/css/bootstrap-datetimepicker.min.css"rel="stylesheet">
    <!-- Bootstrap-icons.css -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css">
    <!-- Style.css -->
    <link rel="stylesheet" href="/css/styles.css">
</head>

<body>

    <div class="container py-4">
        
        <%- include("../partials/header.ejs")%>

        <div class="row align-items-md-stretch px-3">
            <div class="col-md-6">

                <div class="p-5 mb-4 rounded-3" id="div-connect">
                    <h4>Connect to istSOS database</h4>
                    <form method="post" action="/chart/set/ip">
                        <div class="input-group input-group-sm mb-3">
                            <span class="input-group-text" id="inputGroup-sizing-default">Ip</span>
                            <input type="text" name="input-ip" id="input-ip" value="<%= doc['istsos']['ip'] %>" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default">
                        </div>
                    </form> 
                    <form method="post" action="/chart/set/db">
                        <div class="input-group input-group-sm mb-3">
                            <span class="input-group-text" id="inputGroup-sizing-default">Db</span>
                            <input type="text" name="input-db" id="input-db" value="<%= doc['istsos']['db'] %>" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default">
                        </div>
                    </form>
                </div>

                <div class="col align-items-md-stretch">

                    <div class="p-5 mb-4 rounded-3" id="div-select">
                        <!-- <h4>Export Json file for data</h4> -->
                        <div class="input-group mb-3">
                            <label class="input-group-text" for="select-station">Station</label>
                            <select class="form-select" id="select-station">
                                <option selected disabled>Choose...</option>
                            </select>                        
                        </div>
                        <div class="input-group mb-3">
                            <label class="input-group-text" for="datetime-from">From</label>
                            <input id="datetime-from" class="form-control" type="date" disabled />
                            <div class="invalid-feedback">
                                Please choose a username.
                            </div>
                        </div>
                        <div class="input-group has-validation mb-3">
                            <label class="input-group-text" for="datetime-to">To</label>
                            <input id="datetime-to" class="form-control" type="date" disabled /> 
                            <div class="invalid-feedback">
                                Please choose a username.
                            </div>  
                        </div>
                        <div class="input-group mb-3">
                            <label class="input-group-text" for="select-sensor">Sensor</label>
                            <select class="form-select" id="select-sensor" disabled>
                                <option selected disabled>Choose...</option>
                            </select>                        
                        </div>
                        <button class="btn mt-3 btn-success" type="button" id="btn-json" disabled="disabled">Export JSON</button>
                        <button class="btn mt-3 ms-1 btn-success" type="button" id="btn-chart" disabled="disabled">Create chart</button>
                    </div>  
                </div>

            </div>

            <div class="col-md-6 mb-4">
                <div class="h-100 p-5 rounded-3" id="div-output-console">
                    <div class="accordion" id="accordion-base">
                    </div>
                </div>           
            </div>
            

        <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
            <div class="toast align-items-center text-white bg-danger border-0" id="toast-date-error" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                  <div class="toast-body">
                    From and To values are incorrect.
                  </div>
                  <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
              </div>
        </div>
        
        <%- include("../partials/footer.ejs")%>

    </div>

    <!-- JavaScript Bundle with Popper -->
    <script src="assets/bootstrap/js/bootstrap.min.js"></script>
    <script src="/assets/js/jquery.min.js"></script>	
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.9.0/moment.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.37/js/bootstrap-datetimepicker.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

    <script>
        

        $(document).ready(function () {

            data = `<%- data %>`;
            data = data.replace(/[']+/g, '"');
            data = JSON.parse(data);
            // console.log(data);

            for (var i=0; i<data.length; i++) {
                console.log(i, data[i][0]);
                $('#select-station').append(`
                    <option value="${i}">${data[i][0]}</option>
                `);
            }

            $('#select-station').on('click', function() {
                place = $(this).val();
                if (place != 'undefined' && place != null) {
                    begin = data[place][1];
                    end = data[place][2];
                    sensors = data[place][3];
                    console.log(begin, end);
                    enableDatetime(true, begin, end); 
                    enableSensors(true, sensors); 
                    changeJson(true);
                }                    
            });

            $('#select-sensor').on('click', function() {
                place = $(this).val();
                if (place != 'undefined' && place != null) {
                    changeChart(true);  
                }   
            });

            $('#btn-json').on('click',async function() {
                inputData = takeValues(true);
                if (checkDates(inputData[1], inputData[2])) {
                    // donwload json
                    info = JSON.stringify({station: inputData[0], startDate: inputData[1], endDate: inputData[2]});
                    await $.ajax({
                        'url':'/chart/take/measures',
                        'type':'POST',
                        'data': info,
                        'success': function(res) {
                            downloadObjectAsJson(res.result, inputData[0] );
                        },
                        'contentType': "application/json; charset=utf-8",
                        dataType: "json",
                        'processData': false
                    });
                    
                }else {
                    // print alert message
                    var toast = new bootstrap.Toast($('#toast-date-error'));
                    toast.show();
                }
                // console.log(inputData);
            });

            $('#btn-chart').on('click', function() {
                inputData = takeValues();
                console.log(inputData);
            });

            function takeValues(json) {
                place = $('#select-station').val();
                station = data[place][0];
                dtFrom = $('#datetime-from').val();
                dtTo = $('#datetime-to').val();
                if (!json) {
                    sensor = data[place][3][$('#select-sensor').val()];
                    return [station, dtFrom, dtTo, sensor];
                }else return [station, dtFrom, dtTo];
            };

            function checkDates(from, to) {
                if (from <= to) return true;
                else return false;
            };

            function enableDatetime(enable, start, end) {
                if (enable) {
                    $("#datetime-from").removeAttr('disabled');
                    $('#datetime-from').val(start.split('T')[0]);
                    $("#datetime-to").removeAttr('disabled');
                    $('#datetime-to').val(end.split('T')[0]);

                }else {
                    $("#datetime-from").attr('disabled', true);
                    $("#datetime-to").attr('disabled', true);
                };
            };

            function enableSensors(enable, sensors) {
                if (enable) {
                    $("#select-sensor").removeAttr('disabled');
                    for (var i=0; i<sensors.length; i++) {
                        $('#select-sensor').append(`
                            <option value="${i}">${sensors[i]}</option>
                        `);
                    }
                }else {
                    $("#select-sensor").attr('disabled', true);
                };
            };

            function changeJson(enable) {
                if (enable) {
                    $("#btn-json").removeAttr('disabled');
                }else {
                    $("#btn-json").attr('disabled', true);
                };
            };

            function changeChart(enable) {
                if (enable) {
                    $("#btn-chart").removeAttr('disabled');
                }else {
                    $("#btn-chart").attr('disabled', true);
                };
            };

        });

        function downloadObjectAsJson(exportObj, exportName){
            exportObj = JSON.stringify(exportObj);
            exportObj = exportObj.replace(/[']+/g, '"');
            exportObj = JSON.parse(exportObj);
            var dataStr = "data:text/json;charset=utf-8," + encodeURIComponent(exportObj);
            var downloadAnchorNode = document.createElement('a');
            downloadAnchorNode.setAttribute("href", dataStr);
            downloadAnchorNode.setAttribute("download", exportName + ".json");
            document.body.appendChild(downloadAnchorNode); // required for firefox
            downloadAnchorNode.click();
            downloadAnchorNode.remove();
        }
    </script>
</body>

</html>